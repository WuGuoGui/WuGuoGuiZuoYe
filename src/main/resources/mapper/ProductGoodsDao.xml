<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jiyun.shop.dao.ProductGoodsDao">

    <resultMap id="BaseResultMap" type="cn.jiyun.shop.entity.ProductGoods">
        <!--@Table product_goods-->
        <result property="goodsid" column="goodsid" jdbcType="INTEGER"/>
        <result property="goodsname" column="goodsname" jdbcType="VARCHAR"/>
        <result property="brandid" column="brandid" jdbcType="INTEGER"/>
        <result property="category" column="category" jdbcType="INTEGER"/>
        <result property="price" column="price" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="param" column="param" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          goodsid, goodsname, brandid, category, price, state, param
        from product_goods
        where goodsid = #{goodsid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          goodsid, goodsname, brandid, category, price, state, param
        from product_goods
        <where>
            <if test="goodsid != null">
                and goodsid = #{goodsid}
            </if>
            <if test="goodsname != null and goodsname != ''">
                and goodsname = #{goodsname}
            </if>
            <if test="brandid != null">
                and brandid = #{brandid}
            </if>
            <if test="category != null">
                and category = #{category}
            </if>
            <if test="price != null and price != ''">
                and price = #{price}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
            <if test="param != null">
                and param = #{param}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          goodsid, goodsname, brandid, category, price, state, param
        from shop.product_goods
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from product_goods
        <where>
            <if test="goodsid != null">
                and goodsid = #{goodsid}
            </if>
            <if test="goodsname != null and goodsname != ''">
                and goodsname = #{goodsname}
            </if>
            <if test="brandid != null">
                and brandid = #{brandid}
            </if>
            <if test="category != null">
                and category = #{category}
            </if>
            <if test="price != null and price != ''">
                and price = #{price}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
            <if test="param != null">
                and param = #{param}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="goodsid" useGeneratedKeys="true">
        insert into product_goods(goodsname, brandid, category, price, state, param)
        values (#{goodsname}, #{brandid}, #{category}, #{price}, #{state}, #{param})
    </insert>

    <insert id="insertBatch" keyProperty="goodsid" useGeneratedKeys="true">
        insert into product_goods(goodsname, brandid, category, price, state, param)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.goodsname}, #{entity.brandid}, #{entity.category}, #{entity.price}, #{entity.state}, #{entity.param})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="goodsid" useGeneratedKeys="true">
        insert into product_goods(goodsname, brandid, category, price, state, param)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.goodsname}, #{entity.brandid}, #{entity.category}, #{entity.price}, #{entity.state}, #{entity.param})
        </foreach>
        on duplicate key update
        goodsname = values(goodsname),
        brandid = values(brandid),
        category = values(category),
        price = values(price),
        state = values(state),
        param = values(param)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update product_goods
        <set>
            <if test="goodsname != null and goodsname != ''">
                goodsname = #{goodsname},
            </if>
            <if test="brandid != null">
                brandid = #{brandid},
            </if>
            <if test="category != null">
                category = #{category},
            </if>
            <if test="price != null and price != ''">
                price = #{price},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="param != null">
                param = #{param},
            </if>
        </set>
        where goodsid = #{goodsid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from product_goods where goodsid = #{goodsid}
    </delete>

</mapper>

